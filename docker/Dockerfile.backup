# Multi-stage build dla optymalizacji
FROM python:3.11-slim as builder

WORKDIR /app

COPY app/requirements.txt .

# Instalacja zależności do katalogu użytkownika
RUN pip install --no-cache-dir --user -r requirements.txt gunicorn

# Instalacja narzędzi do budowania (jeśli potrzebujesz)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

ENV HOME=/home/appuser

FROM python:3.11-slim

LABEL maintainer="Portfolio Demo"
LABEL description="K8s + Terraform Portfolio Demo Application"
LABEL version="1.0.0"

RUN groupadd -r appuser && useradd -r -g appuser appuser

WORKDIR /app

# Kopiowanie z buildera lokalnej instalacji pip
COPY --from=builder /root/.local /home/appuser/.local
RUN chown -R appuser:appuser /home/appuser/.local

COPY app/ .

RUN chown -R appuser:appuser /app

USER appuser

ENV PATH=/home/appuser/.local/bin:$PATH
ENV FLASK_APP=app.py
ENV FLASK_ENV=production
ENV PYTHONPATH=/app
ENV PORT=5000

EXPOSE 5000

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

CMD ["/home/appuser/.local/bin/gunicorn", "--bind", "0.0.0.0:5000", "--workers", "2", "--timeout", "60", "--keep-alive", "2", "app:app"]
